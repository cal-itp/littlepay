name: Publish release

on:
  workflow_dispatch:
  push:
    tags:
      - "202[3-9].[0-9][0-9].[0-9]+"
      - "202[3-9].[0-9][0-9].[0-9]+-rc[0-9]+"

defaults:
  run:
    shell: bash

jobs:
  test:
    uses: ./.github/workflows/pytest.yml

  release:
    runs-on: ubuntu-latest
    environment: release
    needs: test
    permissions:
      # https://github.com/softprops/action-gh-release#permissions
      contents: write
      # https://docs.pypi.org/trusted-publishers/using-a-publisher/
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: "**/pyproject.toml"

      - name: Install build dependencies
        run: pip install build

      - name: Build package
        run: python -m build

      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1.5
        if: ${{ contains(github.ref, '-rc') }}
        with:
          repository_url: https://test.pypi.org/legacy/
          print_hash: true
          skip_existing: true
          verbose: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1.5
        if: ${{ !contains(github.ref, '-rc') }}
        with:
          print_hash: true

      - name: Parse version and output PyPI URL
        id: version
        # run littlepay first, so `littlepay -v` doesn't create the config file (which outputs a message)
        run: |
          littlepay
          pip install pyproject.toml
          output=$(littlepay -v)
          version=${output/littlepay /}
          version=${version/.0/}
          echo "PYPI_RELEASE_URL=https://pypi.org/project/calitp-littlepay/$version" >> "$GITHUB_OUTPUT"

      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          PYPI_RELEASE_URL: ${{ steps.version.outputs.PYPI_RELEASE_URL }}
        with:
          files: |
            ./dist/*.tar.gz
            ./dist/*.whl
          prerelease: ${{ contains(github.ref, '-rc') }}
          generate_release_notes: ${{ !contains(github.ref, '-rc') }}
          body: $PYPI_RELEASE_URL
